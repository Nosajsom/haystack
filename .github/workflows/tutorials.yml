name: Tutorials

on:
  workflow_dispatch:  # Activate this workflow manually
  push:
    branches:
      - master
    paths:
      - '**/*.py'
      - '**/*.cfg'
      - '**/*.toml'
      - '**/*.ipynb'
  pull_request:
    # branches:
    #   - master
    # paths:
    #   - '**/*.py'
    #   - '**/*.cfg'
    #   - '**/*.toml'
    #   - '**/*.ipynb'

jobs:

  notebooks-matrix:
    needs: cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: notebooks-matrix
        run: echo "::set-output name=matrix::$(find tutorials/ -name "*.ipynb" | jq -SR . | jq -cs .)"
    outputs:
      matrix: ${{ steps.notebooks-matrix.outputs.matrix }}


  scripts-matrix:
    needs: cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: scripts-matrix
        run: echo "::set-output name=matrix::$(find tutorials/ -name "*.py" | jq -SR . | jq -cs .)"
    outputs:
      matrix: ${{ steps.scripts-matrix.outputs.matrix }}


  notebooks:
    needs: notebooks-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        notebook-path: ${{fromJson(needs.notebooks-matrix.outputs.matrix)}}
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Cache Python
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: linux-${{ env.date }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/setup.cfg') }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    - name: Run notebook
      run: sudo ${{ env.pythonLocation }}/bin/ipython -c "%run ${{ matrix.notebook-path }}"


  scripts:
    needs: scripts-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        script-path: ${{fromJson(needs.scripts-matrix.outputs.matrix)}}
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Cache Python
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: linux-${{ env.date }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/setup.cfg') }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Run Elasticsearch
      run: docker run -d -p 9200:9200 -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms128m -Xmx128m" elasticsearch:7.9.2

    - name: Run Apache Tika
      run: docker run -d -p 9998:9998 -e "TIKA_CHILD_JAVA_OPTS=-JXms128m" -e "TIKA_CHILD_JAVA_OPTS=-JXmx128m" apache/tika:1.24.1

    - name: Install pdftotext
      run: wget --no-check-certificate https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz && tar -xvf xpdf-tools-linux-4.04.tar.gz && sudo cp xpdf-tools-linux-4.04/bin64/pdftotext /usr/local/bin

    # Haystack needs to be reinstalled at this stage to make sure the current commit's version is the one getting tested.
    # The cache can last way longer than a specific action's run, so older Haystack version could be carried over.
    - name: Reinstall Haystack
      run: |
        pip install --upgrade pip
        pip install .[all]
        pip install torch-scatter -f https://data.pyg.org/whl/torch-1.11.0+cpu.html

    - name: Run script
      run: python ${{ matrix.script-path }}
